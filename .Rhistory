dev.off()
getwd()
png(filename="test.png", width=480, height=480, bg="transparent")   # choose device..
par(mar=c(6,4,3,2))
hist(dat$V3, breaks=15, col= "red", ylim = c(0,1200), xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main= "Global Active Power")
dev.off()
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot1.png"
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
par(mar=c(6,4,3,2))
hist(dat$V3, breaks=15, col= "red", ylim = c(0,1200), xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main= "Global Active Power")
dev.off()
69518 - 66637
zen()
# plot1.r
# make plot 1 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot1.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637
dat <- read.table(filepath, skip=66637, nrows=2881, sep=";", na.strings = "?", colClasses = classes)
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot1.png"
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
par(mar=c(6,4,3,2))
hist(dat$V3, breaks=15, col= "red", ylim = c(0,1200), xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main= "Global Active Power")
dev.off()
head(dat)
end(dat)
foot(dat)
?head
ht(dat)
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes)
ht(dat)
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes)
head(dat)
tail(dat)
# plot1.r
# make plot 1 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot1.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes)
head(dat)
tail(dat)
## make plot1
# where to save
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot1.png"
# make the fig
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
par(mar=c(6,4,3,2))
hist(dat$V3, breaks=15, col= "red", ylim = c(0,1200), xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main= "Global Active Power")
dev.off()
View(tab5rows)
?strptime
View(tab5rows)
View(dat)
data$DateTime <- as.POSIXct(paste(data$V1, data$V2), format="%d/%m/%Y %H:%M:%S")
dat$DateTime <- as.POSIXct(paste(data$V1, data$V2), format="%d/%m/%Y %H:%M:%S")
dat$DateTime <- as.POSIXct(paste(dat$V1, dat$V2), format="%d/%m/%Y %H:%M:%S")
View(dat)
dat$DateTime <- strptime(paste(dat$V1, dat$V1, sep=" "), format="%d/%m/%Y %H:%M:%S")
class(dat$DateTime)
plot(dat$V3, dat$DateTime)
plot(dat$DateTime, dat$V3)
View(dat)
dat$DateTime <- strptime(paste(dat$V1, dat$V1, sep=" "), format="%d/%m/%Y %H:%M:%S")
class(dat$DateTime)
View(dat)
dat$Date <- as.Date(dat$V1)
View(dat)
?as.Date
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
View(dat)
?strptime
dat$Time <- strptime(dat$V2)
View(dat)
dat$Time <- strptime(dat$V2, format="%H:%M:%S")
View(dat)
dat$DateTime <- strptime(paste(dat$Date, dat$Time, sep=" "), format="%d/%m/%Y %H:%M:%S")
View(dat)
dat$DateTime <- strptime(paste(dat$Date, dat$Time, sep=" "), format="%d/%m/%Y %H:%M:%S")
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
strptime(x, "%m/%d/%y %H:%M:%S")
x
dat$DateTime <- strptime(x, "%m/%d/%y %H:%M:%S")
View(dat)
x
dat$DateTime <- strptime(x, "%m-%d-%y %H:%M:%S")
View(dat)
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
dat$DateTime <- strptime(x, "%m-%d-%y %H:%M:%S")
View(dat)
x
dat$DateTime <- strptime(x, "%m-%d-%Y %H:%M:%S")
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
dat$DateTime <- strptime(x, "%m-%d-%Y %H:%M:%S")
View(dat)
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
dat$DateTime <- strptime(x, "%d-%m-%y %H:%M:%S")
View(dat)
x
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
dat$DateTime <- strptime(x, "%y-%m-%d %H:%M:%S")
View(dat)
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
dat$DateTime2 <- strptime(x, "%y-%m-%d %H:%M:%S")
View(dat)
x[1]
strptime(x[1], "%y-%m-%d %H:%M:%S")
class(x[1])
x <- "2/7/2013 7:43"
class(x)
z <- strptime(x, "%H:%M")
z
y <- strptime(x, format='%m/%d/%Y %H:%M')
y
x
strptime(x, '%m/%d/%Y')
strftime(y, '%H:%M')
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
x[1]
z <- strptime(x, "%y-%m-%d %H:%M:%S")
dat$DateTime2 <- strptime(z, "%y-%m-%d %H:%M:%S")
View(dat)
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
x <- paste(dat$Date, dat$V2)
x <- x[1]
x
z <- strptime(x, "%y-%m-%d %H:%M:%S")
z
x
z <- strptime(x, format="%y-%m-%d %H:%M:%S")
z
x <- "2/7/2013 7:43"
class(x)
z <- strptime(x, "%H:%M")
z
y <- strptime(x, format='%m/%d/%Y %H:%M')
y
strptime(x, '%m/%d/%Y')
strftime(y, '%H:%M')
zen()
# plot2.r
# make plot 2 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot2.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes)
head(dat)
tail(dat)
dat$Date <- as.Date(dat$V1, format="%d/%m/%Y")
head(dat)
as.POSIXct(paste(dat$Date, data$V2), format="%d/%m/%Y %H:%M:%S")
as.POSIXct(paste(dat$Date, dat$V2), format="%d/%m/%Y %H:%M:%S")
View(dat)
data$DateTime <- as.POSIXct(paste(dat$Date, dat$V2), format="%y-%m-%d %H:%M:%S")
View(dat)
data$DateTime <- as.POSIXct(paste(dat$V1, dat$V2), format="%d/%m/%Y %H:%M:%S")
paste(dat$V1, dat$V2)
dat$DateTime <- paste(dat$V1, dat$V2)
View(dat)
dat$DateTime[1]
z <- strptime(dat$DateTime, format="%d-%m-%y %H:%M:%S")
z[1]
zen()
# plot2.r
# make plot 2 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot2.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes)
head(dat)
tail(dat)
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
DateTime[1]
Times[1]
?read.table
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes, stringsAsFactors = FALSE)
zen()
# plot2.r
# make plot 2 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot2.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", colClasses = classes, stringsAsFactors = FALSE)
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
Times[1]
dat$V2[1]
class(dat$V1)
class(dat$V2)
classes
zen()
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
class(dat$V1)
class(dat$V2)
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
data_full <- data_trim
Times[1]
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
data_full <- dat
data_full$DateTime <- DateTime
View(data_full)
class(data_full$DateTime)
zen()
# plot2.r
# make plot 2 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot2.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
# This was messing up stringsAsFactors = FALSE
#tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
#classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
head(dat)
tail(dat)
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
dat$DateTime <- DateTime
View(dat)
plot(dat$DateTime, dat$V3)
plot(type=n)
?plot
plot(type="n")
plot(dat$DateTime, dat$V3, type="n")
lines(dat$DateTime, dat$V3)
plot(dat$DateTime, dat$V3, type="n", xlab = "", ylab = "Global Active Power (kilowatts)", main= "")
lines(dat$DateTime, dat$V3)
# where to save
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot2.png"
# make the fig
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
plot(dat$DateTime, dat$V3, type="n", xlab = "", ylab = "Global Active Power (kilowatts)", main= "")
lines(dat$DateTime, dat$V3)
dev.off()
# plot3.r
# make plot 3 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot3.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
# This was messing up stringsAsFactors = FALSE
#tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
#classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
#head(dat)
#tail(dat)
## make date and time cols nicer
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
dat$DateTime <- DateTime
zzen()
zen()
# plot3.r
# make plot 3 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot3.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
# This was messing up stringsAsFactors = FALSE
#tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
#classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
#head(dat)
#tail(dat)
## make date and time cols nicer
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
dat$DateTime <- DateTime
View(dat)
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
View(tab5rows)
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8)
lines(dat$DateTime, dat$V9)
?lines
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7, col="red")
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
?legend
legend("topright")
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright")
?legend
legend("topright", legend = c("1", "two", "3"),)
?legend
legend("topright", legend = c("1", "two", "3"), col=c("black", "red", "blue"))
?legend
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", # places a legend at the appropriate place
c("1", "two", "3"), # puts text in the legend
lty=c(1,1,1), # gives the legend appropriate symbols (lines)
col=c("black","blue","red")) # gives the legend lines the correct color and width
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("sub_metering_1", "sub_metering_2", "sub_metering_3), lty=c(1,1,1), col=c("black","blue","red"))
legend("topright", c("sub_metering_1", "sub_metering_2", "sub_metering_3"), lty=c(1,1,1), col=c("black","blue","red"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","blue","red"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"))
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"))
dev.off()
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot3.png"
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"))
dev.off()
zen()
# plot4.r
# make plot 4 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot4.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
# This was messing up stringsAsFactors = FALSE
#tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
#classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
#head(dat)
#tail(dat)
## make date and time cols nicer
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
dat$DateTime <- DateTime
par(mfrow=c(2,2))
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
plot(dat$DateTime, dat$V3, type="n", xlab = "", ylab = "Global Active Power (kilowatts)", main= "")
lines(dat$DateTime, dat$V3)
tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
View(tab5rows)
plot(dat$DateTime, dat$V4, type="n", xlab = "", ylab = "Global Active Power (kilowatts)", main= "")
lines(dat$DateTime, dat$V4)
plot(dat$DateTime, dat$V4, type="n", xlab = "datetime", ylab = "global_reactive_power", main= "")
lines(dat$DateTime, dat$V4)
par(mfrow=c(2,2))
plot(dat$DateTime, dat$V3, type="n", xlab = "", ylab = "Global Active Power (kilowatts)", main= "")
lines(dat$DateTime, dat$V3)
plot(dat$DateTime, dat$V5, type="n", xlab = "datetime", ylab = "Voltage", main= "")
lines(dat$DateTime, dat$V5)
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"))
plot(dat$DateTime, dat$V4, type="n", xlab = "datetime", ylab = "Global_reactive_power", main= "")
lines(dat$DateTime, dat$V4)
?legend
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"), bty="n")
zen()
# plot4.r
# make plot 4 from first course assignment
#
# CS O'Connell, UMN EEB/IonE
#####################################################################
# plot4.r
## read in data
# csv info
filepath <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/data/household_power_consumption.txt"
# csv is big - load in faster using colclasses
# This was messing up stringsAsFactors = FALSE
#tab5rows <- read.table(filepath, header = TRUE, nrows = 5, sep=";")
#classes <- sapply(tab5rows, class)
# how many rows to read in? (skip and nrows)
# 69518 - 66637 = 2881, so use 2880
dat <- read.table(filepath, skip=66637, nrows=2880, sep=";", na.strings = "?", stringsAsFactors = FALSE)
#head(dat)
#tail(dat)
## make date and time cols nicer
Dates <- as.Date(dat$V1, format="%d/%m/%Y")
Times <- dat$V2
DateTime <- as.POSIXct(paste(as.character(Dates),as.character(Times)))
dat$DateTime <- DateTime
## make plot4
# where to save
filesave <- "~/Documents/GITHUB/CourseraMaterials/ExData_Plotting1/plot4.png"
# make the fig
png(filename=filesave, width=480, height=480, bg="transparent")   # choose device..
# quadrants
par(mfrow=c(2,2))
# global active power
plot(dat$DateTime, dat$V3, type="n", xlab = "", ylab = "Global Active Power", main= "")
lines(dat$DateTime, dat$V3)
# voltage
# V5
plot(dat$DateTime, dat$V5, type="n", xlab = "datetime", ylab = "Voltage", main= "")
lines(dat$DateTime, dat$V5)
# sub metering
# use V7-9
plot(dat$DateTime, dat$V7, type="n", xlab = "", ylab = "Energy Sub Metering", main= "")
lines(dat$DateTime, dat$V7)
lines(dat$DateTime, dat$V8, col="red")
lines(dat$DateTime, dat$V9, col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=c(1,1,1), col=c("black","red","blue"), bty="n")
# global reactive pwower
# V4
plot(dat$DateTime, dat$V4, type="n", xlab = "datetime", ylab = "Global_reactive_power", main= "")
lines(dat$DateTime, dat$V4)
# end graphics device
dev.off()
